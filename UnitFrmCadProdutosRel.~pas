unit UnitFrmCadProdutosRel;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, DB, DBTables, Mask, RLXLSFilter, RLFilters,
  RLPDFFilter, RLDraftFilter, RLReport, Grids, DBGrids, ZAbstractRODataset,
  ZAbstractDataset, ZDataset, QRCtrls, QuickRpt, ExtCtrls, jpeg, Gauges;

type
  TFrmCadProdutosRel = class(TForm)
    bt1: TBitBtn;
    bt2: TBitBtn;
    Label10: TLabel;
    cbativo: TComboBox;
    query1: TZQuery;
    query1codigo: TIntegerField;
    query1nome: TStringField;
    query1compra: TFloatField;
    query1estoque: TFloatField;
    query1venda: TFloatField;
    QuickRep1: TQuickRep;
    QRBand1: TQRBand;
    qr1: TQRDBText;
    qr3: TQRDBText;
    qr6: TQRExpr;
    QRDBText2: TQRDBText;
    QRExpr3: TQRExpr;
    PageHeaderBand1: TQRBand;
    QRLabel15: TQRLabel;
    qrtituloII: TQRLabel;
    QRLabel21: TQRLabel;
    QRSysData4: TQRSysData;
    QRSysData3: TQRSysData;
    QRSysData2: TQRSysData;
    QRLabel19: TQRLabel;
    QRLabel20: TQRLabel;
    SummaryBand1: TQRBand;
    QRLabel13: TQRLabel;
    QRExpr18: TQRExpr;
    QRExpr8: TQRExpr;
    ColumnHeaderBand1: TQRBand;
    QRLabel2: TQRLabel;
    QRLabel4: TQRLabel;
    QRLabel3: TQRLabel;
    QRLabel10: TQRLabel;
    QRLabel1: TQRLabel;
    QRLabel5: TQRLabel;
    QRLabel6: TQRLabel;
    QRExpr1: TQRExpr;
    QRExpr2: TQRExpr;
    PageFooterBand1: TQRBand;
    QRLabel36: TQRLabel;
    QRLabel37: TQRLabel;
    GroupBox1: TGroupBox;
    rbgeral: TRadioButton;
    rbPositivo: TRadioButton;
    rbzerado: TRadioButton;
    qrempresa: TQRLabel;
    QRLabel7: TQRLabel;
    QRDBText1: TQRDBText;
    query1ncm: TStringField;
    Label2: TLabel;
    cbgrupo: TComboBox;
    qrendereco: TQRLabel;
    qrcnpj: TQRLabel;
    GroupBox2: TGroupBox;
    rbT: TRadioButton;
    rbL: TRadioButton;
    QuickRep6: TQuickRep;
    QRBand19: TQRBand;
    QRLabel71: TQRLabel;
    QRLabel74: TQRLabel;
    QRBand20: TQRBand;
    QRDBText26: TQRDBText;
    QRDBText28: TQRDBText;
    QRBand21: TQRBand;
    QRImage2: TQRImage;
    QRDBText31: TQRDBText;
    QRDBText32: TQRDBText;
    qrtitulo: TQRLabel;
    QRBand22: TQRBand;
    QRLabel77: TQRLabel;
    QRLabel78: TQRLabel;
    QRExpr33: TQRExpr;
    QRDBText3: TQRDBText;
    QRLabel8: TQRLabel;
    QRDBText4: TQRDBText;
    lbdata: TLabel;
    produtos_locais: TZQuery;
    produtos_locaiscodigo: TIntegerField;
    produtos_locaisproduto: TIntegerField;
    produtos_locaislocal: TStringField;
    produtos_locaisquantidade: TFloatField;
    procedure bt2Click(Sender: TObject);
    procedure bt1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Memo1Enter(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure btzerarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmCadProdutosRel: TFrmCadProdutosRel;
  casas,i:integer;
  E_doc,mascara:string;

implementation

uses Unitdm, UnitFrmCadFornecedores, UnitFrmPrincipal;

{$R *.dfm}

procedure TFrmCadProdutosRel.bt2Click(Sender: TObject);
begin
        close;
end;

procedure TFrmCadProdutosRel.bt1Click(Sender: TObject);
  var
    FieldName,nometabela : string;
begin
  dm.parametros.Close;
  dm.parametros.Open;

  FieldName     :=  'Estoque';

  query1.close;
  query1.SQL.Clear;
  query1.SQL.Add('Select Codigo, Nome, Compra, ncm, Venda, Estoque From produtos ');
  if cbativo.Text<>'' then
  begin
    query1.sql.add('where (ativo = '+chr(39)+copy(cbativo.text,1,1)+chr(39)+')');

    if cbgrupo.Text<>'' then
       query1.sql.add('and (grupo = '+chr(39)+copy(cbgrupo.Text,1,4)+chr(39)+')');

    if rbPositivo.Checked=true then
      query1.SQL.Add('and (Estoque>0)')
    else if rbzerado.Checked=true then
      query1.SQL.Add('and (Estoque<=0)');
  end
  else
  begin
    if rbPositivo.Checked=true then
      query1.SQL.Add('where (Estoque>0)')
    else if rbzerado.Checked=true then
      query1.SQL.Add('where (Estoque<=0)');
    if cbgrupo.Text<>'' then
       query1.sql.add('and (grupo = '+chr(39)+copy(cbgrupo.Text,1,4)+chr(39)+')');
  end;
  query1.SQL.Add('order by nome');
  query1.open;

  qrtituloII.Caption        :=  'Relatório - Estoque Físico';
  if cbgrupo.Text<>'' then
     qrtituloII.Caption     :=  qrtituloII.Caption+' - Grupo: '+cbgrupo.Text;
  qrempresa.Caption         :=  frmprincipal.Panel2.Caption;
  qrempresa.Caption       :=  dm.parametrosfantasia.value;
  qrendereco.Caption      :=  '';
  qrcnpj.Caption          :=  '';
  if lbdata.Caption<>'' then
     qrtituloII.Caption:=qrtituloII.Caption+' - Data Base: '+lbdata.Caption;
  qrtitulo.Caption        :=  qrtituloII.Caption;
  if rbL.Checked=true then
     QuickRep1.preview
  else if rbT.Checked=true then
     QuickRep6.preview;
end;

procedure TFrmCadProdutosRel.FormShow(Sender: TObject);
begin
  dm.Grupos.Close;
  dm.Grupos.SQL.Clear;
  dm.Grupos.SQL.Add('select * from grupos');
  dm.Grupos.SQL.Add('order by codigo');
  dm.Grupos.Open;
  cbgrupo.Items.Clear;
  while not dm.Grupos.Eof do
        begin
          cbgrupo.Items.Add(dm.Gruposcodigo.Value+' '+dm.Gruposdescricao.value);
          dm.Grupos.Next;
        end;
end;

procedure TFrmCadProdutosRel.Memo1Enter(Sender: TObject);
begin
        bt1.setfocus;
end;

procedure TFrmCadProdutosRel.FormKeyPress(Sender: TObject; var Key: Char);
begin
        if key=#13 then
        begin
           SelectNext(activecontrol,True,True);
           key:=#0;
        end;
end;

procedure TFrmCadProdutosRel.btzerarClick(Sender: TObject);
begin
  if cblocal.Text <> '' then
     begin
        dm.empresas.open;
        if not(dm.empresas.locate('nome', cblocal.text, [LoCaseInsensitive])) then
        begin
          Showmessage('Empresa inválida!');
          exit;
        end;
     end;
  produtos_locais.close;
  produtos_locais.sql.clear;
  produtos_locais.sql.add('select * from produtos_locais');
  produtos_locais.sql.add('where local = '+chr(39)+dm.empresasCodigo.AsString+chr(39));
  produtos_locais.sql.add('and quantidade<0');
  produtos_locais.open;

  Gauge1.MaxValue:=produtos_locais.RecordCount;
  Gauge1.Progress:=0;
  Gauge1.Visible:=true;

  E_doc:=copy(DateToStr(date),1,2)+copy(DateToStr(date),4,2)+
  copy(DateToStr(date),9,2)+' '+
  copy(TimeToStr(time),1,2)+copy(TimeToStr(time),4,2)+
  copy(TimeToStr(time),7,2);

  dm.movestoque.Close;
  dm.movestoque.SQL.Clear;
  dm.movestoque.SQL.Add('select * from movestoque');
  dm.movestoque.SQL.Add('where (1=2)');
  dm.movestoque.Open;
  while not produtos_locais.Eof do
        begin
          dm.produtos.close;
          dm.produtos.sql.clear;
          dm.produtos.sql.add('select * from produtos');
          dm.produtos.sql.add('where codigo = '+IntToStr(produtos_locaisproduto.Value));
          dm.produtos.open;

          dm.movestoque.Insert;
          dm.movestoqueTipoMov.Value:='EA';
          dm.movestoquedocumento.value:=E_doc;
          dm.movestoquedata.Value:=date;
          dm.movestoquefavorecido.Value:=3;
          dm.movestoqueproduto.Value:=produtos_locaisproduto.Value;
          dm.movestoqueund.Value:=dm.produtosundint.Value;
          dm.movestoqueqtd.Value:=-produtos_locaisquantidade.Value;
          dm.movestoqueVlrUnit.Value:=dm.produtoscompra.Value;
          dm.movestoqueVlrTotal.Value:=dm.movestoqueqtd.Value*dm.produtoscompra.Value;
          dm.movestoquelocal.asstring := dm.empresasCodigo.AsString;
          dm.movestoqueTipo.value := 'E';
          dm.movestoque.Post;

           R_hora:=TimeToStr(time);
           dm.rastro.Close;
           dm.rastro.SQL.Clear;
           dm.rastro.SQL.Add('select * from rastro');
           dm.rastro.SQL.Add('where (1=2)');
           dm.rastro.Open;
           dm.rastro.Insert;
           dm.rastrodata.Value:=date;
           dm.rastrohora.Value:=R_hora;
           dm.rastrooperador.Value:=FrmPrincipal.sb.Panels[3].Text;
           dm.rastrorotina.Value:='MOV. ESTOQUE';
           dm.rastrooperacao.Value:='I';
           dm.rastrohistorico.Value:='EA - Zerar Estoque Automaticamente';
           dm.rastrofavorecido.Value:=produtos_locaisproduto.Value;
           dm.rastroobs.Value:=FrmPrincipal.sb.Panels[7].text+' - '+FrmPrincipal.Panel2.Caption+' - '+E_doc;
           dm.rastro.Post;

          produtos_locais.Next;
          Gauge1.Progress:=Gauge1.Progress+1;
          Application.ProcessMessages;
        end;
   dm.rastro.Close;

   close;
end;

end.
